name: scan_build

on:
  pull_request:
    types: [labeled]

env:
  PACKAGE_NAME: maliput_multilane
  ROS_DISTRO: dashing
  ROS_WS: maliput_ws

jobs:
  static_analysis:
    if: contains(github.event.pull_request.labels.*.name, 'do-static-analyzer-test')
    name: Static analysis
    runs-on: ubuntu-18.04
    container:
      image: ubuntu:18.04
    env:
      LINKER_PATH: /usr/bin/lld-8
    steps:
    # setup-ros first since it installs git, which is needed to fetch all branches from actions/checkout
    - uses: ros-tooling/setup-ros@0.2.1
    # install git from ppa since git 2.18+ is needed to fetch all branches from actions/checkout
    # this step can be removed on 20.04
    - name: install git from ppa
      shell: bash
      run: |
        apt update;
        apt install -y software-properties-common;
        add-apt-repository -y -u ppa:git-core/ppa;
        apt install -y git;
    - uses: actions/checkout@v2
      with:
        path: ${{ env.ROS_WS }}/src/${{ env.PACKAGE_NAME }}
    # clone private dependencies
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/maliput
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/drake-vendor
        fetch-depth: 0
        path: ${{ env.ROS_WS }}/src/drake_vendor
        token: ${{ secrets.MALIPUT_TOKEN }}
    - uses: actions/checkout@v2
      with:
        repository: ToyotaResearchInstitute/maliput_infrastructure
        fetch-depth: 0
        path: maliput_infrastructure
        token: ${{ secrets.MALIPUT_TOKEN }}
    - name: check if dependencies have a matching branch
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src
      run: ./${PACKAGE_NAME}/.github/try_vcs_checkout ${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}} .
    # install drake_vendor prereqs using maliput_infrastructure/tools/prereqs.lib
    - name: install drake_vendor prereqs
      shell: bash
      working-directory: ${{ env.ROS_WS }}/src/drake_vendor
      run: ${GITHUB_WORKSPACE}/maliput_infrastructure/tools/prereqs-install -t drake .
    - name: clang 8 install
      shell: bash
      run: ${{ env.ROS_WS }}/src/${{ env.PACKAGE_NAME }}/.github/clang_suite_installation.sh
    # clone public dependencies
    - name: vcs import
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: vcs import src < src/${PACKAGE_NAME}/.github/dependencies.repos
    - run: colcon graph
      shell: bash
      working-directory: ${{ env.ROS_WS }}
    - name: rosdep install
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        rosdep update;
        rosdep install  -i -y --rosdistro ${ROS_DISTRO} --skip-keys "pybind11" --from-paths src
    - name: colcon build up-to
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        colcon build --packages-up-to ${PACKAGE_NAME} \
          --packages-skip ${PACKAGE_NAME} \
          --event-handlers=console_direct+ \
          --cmake-args -DCMAKE_LINKER=${LINKER_PATH}
    - name: scan_build
      shell: bash
      working-directory: ${{ env.ROS_WS }}
      run: |
        . /opt/ros/${ROS_DISTRO}/setup.bash;
        ./src/${PACKAGE_NAME}/.github/run_scan_build \
            --cmake-args -DCMAKE_LINKER=${LINKER_PATH} \
            --packages-select ${PACKAGE_NAME} \
            --event-handlers=console_direct+;
